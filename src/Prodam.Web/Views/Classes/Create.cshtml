@using Prodam.Core.Entities
@model Prodam.Web.ViewModels.ClassViewModel

@{
    ViewData["Title"] = "Nova Classe";
}

<h2>@ViewData["Title"] </h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Number" class="control-label"></label>
                <input asp-for="Number" class="form-control" />
                <span asp-validation-for="Number" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SchoolSubject" class="control-label"></label>
                <input asp-for="SchoolSubject" class="form-control" />
                <span asp-validation-for="SchoolSubject" class="text-danger"></span>
            </div>

            <div class="form-group">
                <select asp-for="ProfessorId" class="form-control">
                    <option value="">Selecione um professor</option>
                    @foreach (var professor in (List<Professor>)ViewData["Professores"])
                    {
                        <option value="@professor.Id">@String.Format("{0} {1}", professor.Name, professor.LastName)</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
